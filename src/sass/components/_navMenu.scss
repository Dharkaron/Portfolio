@use '../utils/' as *;

/* Code for the Navigation Menu */
.navbar{
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-end;
  color: rgba(214, 214, 214, 0.7);
  max-width: 100vw;
  height: 50px;

  &-menu-btn{
    position: relative;
    display: none;
    align-items: center;
    height: 50px;
    padding: 0 30px;
    font-size: 28px;
    cursor: pointer;

    &::after {
			content: '';
			position: absolute;
			top: 50%;
			right: 4px;
			transform: translateY(-25%);
			width: 0; 
			height: 0; 
			border-left: 8px solid transparent;
			border-right: 8px solid transparent;
			border-top: 8px solid $main-color;
			transition:transform 1s;	
      transform-origin: 8px 2px;
		}
  }
  &-menu-toggle{
    display: none;
  }	
     
  &-menu-wrapper{
    overflow:hidden;
		width:100%;
		
		transition:0.8s;

    & .navbar-menu{    
      padding: 5px 20px;
      margin-top: 10px;
      display: flex;
      justify-content: center;
      gap: 60px;
     
      &-item{
        position: relative;
        transition:0.15s ease-in-out;
  
        & a{
          font-size: 25px;
          position: relative;

        }        
        &:hover{
        color: rgb(214, 214, 214);
        transform: scale(1.04);
        } 
      }      
    } 
  }
}

.fixed-top{
  position: fixed;
  top:0;
  right: 0;
  left: 0;

  background: rgba(41, 53, 61, 0.95);
  z-index: 100;
  box-sizing: border-box;
  opacity: 0;
  animation: appear 0.6s forwards;
}

/*******   Navigation Menu Media Queries   ********/
@media (width < 1024px){
  .navbar{
  flex-direction: column;
  align-items: center;
  height: auto;

  &-menu-btn{
    display: flex;      
  }
  // opening (and closing) of the menu depending of the "checked" value of the input
  &-menu-toggle:checked ~ .navbar-menu-wrapper{
	max-height:20rem;
  }
  &-menu-toggle:checked ~ .navbar-menu-btn::after{
    transform: rotate(180deg);
  }
  &-menu-wrapper{
    max-height: 0;

    & .navbar-menu{
      flex-direction: column;
      align-items: center;
      gap: 20px;
    }
  }
  }
}


// Prevent selection and/or click on element
.unselectable{
	pointer-events:none;
	user-select:none;
}